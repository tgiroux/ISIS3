<?xml version="1.0" encoding="UTF-8"?>

<application name="maplab" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://isis.astrogeology.usgs.gov/Schemas/Application/application.xsd">

  <brief>
    Add Mapping group to the labels of a cube
  </brief>

  <description>
    <p>
      The maplab application is used to geo-reference a map-projected cube by
      adding or updating the Mapping Group with projection and geo-referencing
      information.  Maplab takes as input a map-projected cube and a map file.
      The user has the option to geo-reference by (LATITUDE,LONGITUDE)-coordinates
      or by (X,Y)-map-projected-coordinates that correspond to a given
      (SAMPLE,LINE)-coordinate in the input cube.
    </p>

    <p>
      The map file must contain information pertaining to the specifics of the
      cube's map-projection parameters, along with the  target, body radius,
      longitude direction, latitude type and scale.  We suggest running the
      maptemplate program to generate the map file provided as input.
    </p>

    <p>
      NOTE that when selecting a SAMPLE and LINE for referencing known coordinates
      to a pixel, pixel coordinate (0.5, 0.5) is the top-left corner of the top-left
      pixel in the cube.  By extension, (1.0, 1.0) is the center of the top-left
      pixel, and (1.5, 1.5) is the lower-right corner of the top-left pixel.
    </p>
  </description>

  <category>
    <categoryItem>Import and Export</categoryItem>
    <categoryItem>Map Projection</categoryItem>
  </category>

  <history>
    <change name="Jeannie Walldren" date="2008-01-17">
      Original version
    </change>
    <change name="Christopher Austin" date="2008-04-18">
      The input map will now use pixels/degree if no pixel resolution is found.  
      If neither are present, throws an error.  Both PixelResolution and Scale 
      (pixels/degree) keywords will be in the output.
    </change>
    <change name="Travis Addair" date="2009-11-06">
      Added error checking to ensure that the provided map file has all the 
      necessary keywords for later processing, and enhanced documentation to 
      discuss necessary keywords and pixel coordinates.
    </change>
    <change name="Mackenzie Boyd" date="2011-04-11">
      Changed parameter LONG to LON, removed duplicate code. 
    </change>
    <change name="Tracie Sucharski" date="2012-12-06">
      Changed to use TProjection instead of Projection.  References #775
    </change>
  </history>

  <groups>
    <group name="Input Files">
      <parameter name="FROM">
        <type>cube</type>
        <fileMode>input</fileMode>
        <brief>
          Input file to be geo-referenced
        </brief>
        <description>
          The cube whose label will be updated with Mapping Group information.
        </description>
        <filter>
          *.cub
        </filter>
      </parameter>

      <parameter name="MAP">
        <type>filename</type>
        <fileMode>input</fileMode>
        <brief>
          Input map file
        </brief>
        <description>
          File containing map projection parameters.
        </description>
        <filter>
          *.map
        </filter>
      </parameter>
    </group>

    <group name="Input Values">
      <parameter name= "SAMPLE">
        <type>double</type>
        <brief>Sample position in the cube</brief>
        <description>
          The SAMPLE coordinate in the cube that corresponds to a known 
          (X,Y) or (LATITUDE,LONGITUDE) coordinate. In ISIS, the upper-left
          corner of the upper-left pixel has coordinate 0.5.
        </description> 
      </parameter>
      <parameter name="LINE">
        <type>double</type> 
        <brief>Line position in the cube</brief>
        <description> 
          The LINE coordinate in the cube that corresponds to a known 
          (X,Y) or (LATITUDE,LONGITUDE) coordinate. In ISIS, the upper-left 
          corner of the upper-left pixel has coordinate 0.5.
        </description>
      </parameter> 
      <parameter name="COORDINATES">
        <type>string</type>
        <brief>Options for coordinate systems</brief>
        <description>
          A list of the different types of coordinates allowed by the
          application.
        </description>
        <default><item>XY</item></default>
        <list>
          <option value="XY">
            <brief>Allows X, Y as Input Values</brief>
            <description> 
              This option allows the user to enter the (X,Y) map projected
              coordinate (in meters) that corresponds to the given
              (SAMPLE,LINE) coordinate.
              This option excludes LATITUDE and LONGITUDE input values.
            </description>
            <exclusions> 
              <item>LAT</item>
              <item>LON</item>
            </exclusions>
            <inclusions> 
              <item>X</item>
              <item>Y</item>
            </inclusions>
          </option>
          <option value="LATLON">
            <brief>Allows LAT, LON as Input Values</brief>
            <description> 
              This option allows the user to enter the (LATITUDE,LONGITUDE)
              coordinate that corresponds to the given (SAMPLE,LINE) coordinate.
              The (LATITUDE,LONGITUDE) coordinate is in decimal degrees, and must
              be in the same LatitudeType and LongitudeDomain listed in the map file.
              This option excludes X and Y input values.
            </description>
            <exclusions> 
              <item>X</item>
              <item>Y</item>
            </exclusions>
            <inclusions> 
              <item>LAT</item>
              <item>LON</item>
            </inclusions>
          </option>
        </list>
      </parameter>      
      <parameter name="X">
        <type>double</type>
        <brief>X map-projected coordinate corresponding to (SAMPLE,LINE), meters</brief>
        <description> 
          The map-projection X-coordinate, in meters, corresponding to the
          the given (SAMPLE,LINE) coordinate of the cube.
        </description>
      </parameter>
      <parameter name="Y">
        <type>double</type>
        <brief>Y map-projected coordinate corresponding to (SAMPLE,LINE), meters</brief>
        <description> 
          The map-projection Y-coordinate, in meters, corresponding to the 
          given (SAMPLE,LINE) coordinate of the cube.
        </description>
      </parameter>
      <parameter name="LAT">
        <type>double</type>
        <brief>Latitude coordinate corresponding to (SAMPLE,LINE), degrees</brief>
        <description> 
          Latitude coordinate, in decimal degrees, for the given
          (SAMPLE,LINE) coordinate of the cube.  It must be in the same
          LatitudeType listed in the map file.
        </description>
      </parameter>
      <parameter name="LON">
        <type>double</type>
        <brief>Longitude coordinate corresponding to (SAMPLE,LINE), degrees</brief>
        <description> 
          Longitude coordinate, in decimal degrees, for the given
          (SAMPLE,LINE) coordinate of the cube. It must be in the same
          LongitudeDomain listed in the map file.
        </description>
      </parameter>  
    </group>
  </groups>

  <examples>
    <example>
      <brief>GeoTiff Header</brief>
      <description>
        Most outside applications use the top left pixel (either upper-left edge
        or center) to define their location in X, Y. For example, a GeoTiff with
        an internal header, uses the upper left edge and for an example may
        report: Upper Left (2883258.0, 979924.0) -- meaning (X, Y).  Thus for
        maplab, one would need to use the same top left corner of the pixel for
        ISIS, as illustrated in the command line below.
      </description>
      <terminalInterface>
        <commandLine> from=input.cub map=projection.map sample=0.5 line=0.5 x=2883258.0 y=979924.0
        </commandLine>
        <description> 
          Mapping the upper-left of an ISIS cube (0.5, 0.5) to the upper left of
          the example image (2883258.0, 979924.0).
        </description>
      </terminalInterface>
      <dataFiles>
        <dataFile path="">
          <brief></brief>
          <description>
            <strong>
              For this example, the original label already contained a Mapping 
              Group.
            </strong>
            <pre>
Object = IsisCube 
  ...
  Group = Mapping
    ProjectionName     = Sinusoidal
    CenterLongitude    = 227.95679821639
    TargetName         = Mars
    EquatorialRadius   = 3396190.0 &lt;meters&gt;
    PolarRadius        = 3376200.0 &lt;meters&gt;
    LatitudeType       = Planetocentric
    LongitudeDirection = PositiveEast
    LongitudeDomain    = 360
    MinimumLatitude    = 10.76690271209
    MaximumLatitude    = 34.444196777763
    MinimumLongitude   = 219.72404560653
    MaximumLongitude   = 236.18955082624
    <span style="background-color:#ffc;">UpperLeftCornerX   = -480000.00000057 &lt;meters&gt;</span>
    <span style="background-color:#ffc;">UpperLeftCornerY   = 2042000.0 &lt;meters&gt;</span>
    PixelResolution    = 1000.0 &lt;meters/pixel&gt;
    Scale              = 59.274697523306 &lt;pixels/degree&gt;
    TrueScaleLatitude  = 0.0
  End_Group
  ...
End_Object
            </pre>
          </description>
        </dataFile>
        <dataFile path="">
          <brief></brief>
          <description>
            <strong>
              After the command line is run, the original Mapping Group is
              revised.
            </strong>
            <pre> 
Object = IsisCube
  ...
  Group = Mapping
    ProjectionName     = Sinusoidal
    CenterLongitude    = 227.95679821639
    TargetName         = Mars
    EquatorialRadius   = 3396190.0 &lt;meters&gt;
    PolarRadius        = 3376200.0 &lt;meters&gt;
    LatitudeType       = Planetocentric
    LongitudeDirection = PositiveEast
    LongitudeDomain    = 360
    MinimumLatitude    = 10.76690271209
    MaximumLatitude    = 34.444196777763
    MinimumLongitude   = 219.72404560653
    MaximumLongitude   = 236.18955082624 
    <span style="background-color:#ffc;">UpperLeftCornerX   = 2883258.0 &lt;meters&gt;</span>
    <span style="background-color:#ffc;">UpperLeftCornerY   = 979924.0 &lt;meters&gt;</span>
    PixelResolution    = 1000.0 &lt;meters/pixel&gt;
    Scale              = 59.274697523306 &lt;pixels/degree&gt;
    TrueScaleLatitude  = 0.0
  End_Group
  ...
End_Object
            </pre>
          </description>
        </dataFile>
      </dataFiles>
    </example>

    <example>
      <brief>GIS Worldfile</brief>
      <description>
        A typical image that has a "GIS Worldfile", in contrast to an internal
        GeoTiff header, uses the center of the top left pixel to define its
        location in X, Y. Thus a Worldfile might look like myImage.wld or *.tfw,
        *.jgw, *.pgw (depending on image type):
        <pre>
          2.0           Cellsize in X (meters)
          0.0           rotation/skew (normally 0)
          0.0           rotation/skew (normally 0)
          -2.0          Cellsize in Y (meters)
          -24243.731055 Upper-left pixel center X (meters)
          815863.281183 Upper-left pixel center Y (meters)
        </pre>
        Thus for this example the user would need to run the program with the
        command line that follows.
      </description>
      <terminalInterface>
        <commandLine> from=input.cub map=projection.map sample=1 line=1 x=-24243.731055 y=815863.281183
        </commandLine>
        <description> 
          Mapping the center of the upper-left pixel of an ISIS cube (1.0, 1.0)
          to the center of the upper left of the example image (2883258.0,
          979924.0).
        </description>
      </terminalInterface>
    </example>

    <example>
      <brief>Simple Cylindrical Global Case</brief>
      <description>
        Say the global file is 1440x720 or 4ppd (and perfectly 0 to 360 lon and
        -90 to 90 lat). This global case would be run as follows.
      </description>
      <terminalInterface>
        <commandLine> from=input.cub map=projection.map sample=0.5 line=0.5 coordinates=latlong lon=0 lat=90
        </commandLine>
        <description> 
          Or assuming clon is set to 180, > maplab ... sample=720.5 line=360.5
          x=0 y=0
        </description>
      </terminalInterface>
    </example>

    <example>
      <brief>Polar File</brief>
      <description>
        Generally one will try to bring in a polar file which is 0 to 360 lon,
        extends to a common lat range, and centered at the pole (clat = 90 or
        -90). Nothing about the extent in meters is needed if the center of the
        image is again 90 or -90 lat.  Again GIS/RS application will still
to the upper left pixel but manually this can be harder to use
        than just using the center which will be defined as X,Y = 0,0 when in a
        Polar or Lambert Azimuthal projection.  Using an example where the polar
        image is 2000 lines by 2000 samples then the run would look like:
      </description>
      <terminalInterface>
        <commandLine> from=input.cub map=projection.map sample=1000.5 line=1000.5 x=0 y=0
        </commandLine>
        <description> 
          Assuming clat is 90 or -90.
        </description>
      </terminalInterface>
    </example>

  </examples>
</application>
