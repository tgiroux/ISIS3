Unit test for TriangularPlate.

TriangularPlate basic info for plate...
    "1.0"     "0.0"     "0.0"     
    "0.0"     "1.0"     "0.0"     
    "0.0"     "0.0"     "1.0"     

Name:        "TriangularPlate"
ID:          2
Min Radius:  1000  meters
Max Radius:  1000  meters
Area:        0.866025
Normal:      "( 0.577350269189626, 0.577350269189626, 0.577350269189626 )"
Center:      "( 0.333333333333333, 0.333333333333333, 0.333333333333333 )"


Look for intercept using ray direction and observer
Ray Dir:             "( 1.0, 1.0, 1.0 )"
Observer:            "( 0.0, 0.0, 1.0 )"
Has intercept?       false
Intercept is null?      "Yes"

Look for intercept using ray direction and observer
Ray Dir:             "( 0.0, 0.0, 1.0 )"
Observer:            "( 0.0, 0.0, 2.0 )"
Has intercept?       false
Intercept is null?      "Yes"

Look for intercept using ray direction and observer
Ray Dir:             "( -1.0, 1.0, 0.0 )"
Observer:            "( 0.0, 0.0, 2.0 )"
Has intercept?       false
Intercept is null?      "Yes"

Look for intercept using ray direction and observer
Ray Dir:             "( 1.0, -1.0, 0.0 )"
Observer:            "( 0.0, 0.0, 2.0 )"
Has intercept?       false
Intercept is null?      "Yes"

Look for intercept using ray direction and observer
Ray Dir:             "( 0.0, 0.0, -1.0 )"
Observer:            "( 0.0, 0.0, 0.0 )"
Has intercept?       false
Intercept is null?      "Yes"

Look for intercept using ray direction and observer
Ray Dir:             "( -1.0, 0.0, 0.0 )"
Observer:            "( 0.0, 0.0, 0.0 )"
Has intercept?       false
Intercept is null?      "Yes"

Look for intercept using ray direction and observer
Ray Dir:             "( 0.0, -1.0, 0.0 )"
Observer:            "( 0.0, 0.0, 0.0 )"
Has intercept?       false
Intercept is null?      "Yes"

Look for intercept using ray direction and observer
Ray Dir:             "( 0.0, 0.0, 0.0 )"
Observer:            "( 0.0, 0.0, 0.0 )"
Has intercept?       false
Intercept is null?      "Yes"

Look for intercept using ray direction and observer
Ray Dir:             "( 1.0, 1.0, 1.0 )"
Observer:            "( 0.0, 0.0, 0.0 )"
Has intercept?       true
Intercept Shape:     "TriangularPlate"
Intercept Observer:  "( 0.0, 0.0, 0.0 )"
Intercept Look Dir:  "( 1.0, 1.0, 1.0 )"
Intercept Location:  333.333 333.333 333.333  meters
Sep Angle:           0 <radians> (0 <degrees>)


Look for surface point using south pole
Latitude:       -1.5708 <radians> (-90 <degrees>)
Longitude:      0 <radians> (0 <degrees>)
Has point?      false
Surface point at pole is null?      "Yes"

Look for surface point using equator
Latitude:       0 <radians> (0 <degrees>)
Longitude:      0 <radians> (0 <degrees>)
Has point?      true
Surface point:  1000 0 0  meters


Create clone
Clone Name:        "TriangularPlate"
Clone Min Radius:  1000  meters
Clone Max Radius:  1000  meters
Clone Area:        0.866025
Clone Normal:      "( 0.577350269189626, 0.577350269189626, 0.577350269189626 )"


Get vertex at index 0
"( 1.0, 0.0, 0.0 )"


================================= Error Throws ==================================
Get vertex at index -1
**PROGRAMMER ERROR** Unable to get TriangularPlate vertex for index [-1]. Valid index range is 0-2.

Get vertex at index 5
**PROGRAMMER ERROR** Unable to get TriangularPlate vertex for index [5]. Valid index range is 0-2.
