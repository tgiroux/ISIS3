<?xml version="1.0" encoding="UTF-8"?>

<application name="slither" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://isis.astrogeology.usgs.gov/Schemas/Application/application.xsd">

  <brief>
      Computes a transformation to shift entire lines or samples
  </brief>

  <description>
      <p>
         slither computes an image transformation that shifts lines up or down
         and samples left or right preserving whole lines and samples.  The
         transform is computed from a control net file.  These control net files are
         typically generated by Isis applications such as <b>coreg</b> and
         <b>hijitreg</b>.  
      </p>
      <p>
         The transform used to generate the output file is computed by
         statistically merging all the column coregistration results into one
         column for each row.  The important values in the control net file used
         are the line and sample offsets.  These are relative shifts in line and
         sample at each coregistration chip center.  See <b>coreg</b> or
         <b>hijitreg</b> for details on registration chips.
      </p>
      <p>
          The offsets computed are relative shifts in line and sample using a
          user selectable interpolation scheme via the SPLINE parameter. 
          The type of spline selected is then used to compute the interpolation
          for both the line and sample offsets.  They are computed independanty
          and applied independantly as well for each output line and sample
          position requested during the tranform operation.
      </p>
      <p>
          The parameters LINEOFFSET and SAMPLEOFFSET can be used
          to shift the entire translation spatially in line and sample, respectively.
          This is indicated when the initial starting point in the coregistration
          application were not spatially registered, defined as the line and
          sample chip coordinates in both images where the same when they
          were correlated.   Typically, <b>hijitreg</b> is the beneficiary of these
          parameters.
      </p>
      <p>
          slither computes either a forward of reverse transform, meaning the
          results can be applied to the either image used in computing the
          coregistration values.  The forward transform is typical, applying
          slither to the file provided in the FROM parameter of the
          coregistration applications.
      </p>
      <p>
          For further analysis, a rather large volume of data is created in the
          RESULTS file if provided by the user.  This file will contain statistics
          for the control points used and also for each line in the output
          image.  Offsets for every line and the center sample is computed
          and written to this file, so it will have at least as many lines of data as
          the input image.  It is really suited for plotting the resulting transform
          for verification and analysis.
      </p>
  </description>

  <history>
    <change name="Kris Becker" date="2006-06-22">
      Original version
    </change>
    <change name="Brendan George" date="2006-09-28">
        Documentation fixes
    </change>
    <change name="Brendan George" date="2006-10-05">
        Modified call to get current time to point to Time class, instead
        of Application class
    </change>
    <change name="Steven Lambright" date="2007-06-22">
        Fixed typo in user documentation
    </change>
    <change name="Steven Lambright" date="2008-05-13"> 
      Removed references to CubeInfo
    </change>
    <change name="Jeannie Walldren" date="2008-11-05"> 
      Removed references to DataInterp class and replaced them with 
      NumericalApproximation class.
    </change>
  </history>

  <category>
    <categoryItem>Geometry</categoryItem>
  </category>

  <groups>
    <group name="Files">
      <parameter name="FROM">
        <type>cube</type>
        <fileMode>input</fileMode>
        <brief>
          Input cube to slither
        </brief>
        <description>
          Use this parameter to select the filename. All bands within the file
          will be slithered unless a specific band is specified.
        </description>
        <filter>
          *.cub
        </filter>
      </parameter>

      <parameter name="TO">
        <type>cube</type>
        <fileMode>output</fileMode>
        <brief>
          Output cube
        </brief>
        <description>
          This file will contain the results of the slither transform
        </description>
      </parameter>

      <parameter name="CONTROL">
        <type>filename</type>
        <brief>
          Control Net file
        </brief>
        <description>
            <p>
               This file will contain the control net used to compute the translation.
               It will typically come from the <b>coreg</b> or <b>hijitreg</b>
               application but could come from other sources.
            </p>
            <p>
                There are some restrictions/requirements as to the content and
                form of this file.  First, there must only be two measures per
                control point.  If there are any more or less than two they are
                silently ignored.  This will typically result in failure as each 
                interpolation option requires a minimum number of points.  (If
                one point does not satisfy this requirement, typically none of
                them will and slither will terminate with an error indicating not
                enough points.)
            </p>
            <p>
                Secondly, one of the measures should be identified as the
                reference image.  The reference image is typically the image that
                was provided in the MATCH parameter to <b>coreg</b> or
                <b>hijitreg</b>.  If this is not the case, slither assumes the first
                point is the reference image.  It has no other way to determine
                this.
            </p>
            <p>
                This is important because of the way control points are combined
                into a single column at each row.  Typically, applications such as 
                <b>coreg</b> and <b>hijitreg</b> will compute coregistration
                chips at the same line for each column.  The line numbers are
                used to determine which columns are combined for each row.
                If the correct lines cannot be determined (with robust equvialence
                checking considering roundoff), then chances are good that the
                translation will not work properly.  For example, if the reference
                image was erroneously selected to be the FROM parameter from
                the registration applications, then it would compare translated
                (shifted) lines and conclude that every chip is a unique row.
                This would result in as many rows as chips and, by definition,
                this would cause the interpolation to fail.
            </p>
            <p>
                Unfortunately, this is mostly programmer controlled so when these
                types of problems occur, they should be reported to the Isis
                Support.
            </p>
        </description>
        <filter>
          *.net
        </filter>
      </parameter>

      <parameter name="RESULTS">
        <type>filename</type>
        <brief>
          Dump of line/sample interpolation and statistics
        </brief>
        <description>
          This file is optional and if specifed, will contain a dump of the
          determination of the collapse of the columns at each row and
          the statistics at each row.  It also contains the absolute line and
          sample mapping for each line and (center) sample of each line as well
          as relative line and sample offsets at each line.
        </description>
        <internalDefault>None</internalDefault>
        <filter>
          *.txt
        </filter>
      </parameter>

    </group>

    <group name="Spline parameters">
      <parameter name="SPLINE">
        <type>string</type>
        <default><item>CUBIC</item></default>
        <brief>Interpolation type to be used on the line and sample transform</brief>
        <description>
            slither provides 4 different (spline) interpolation options.  The
            interpolation option chosen is used to compute a continuous (or
            piecewise continous) interpolation so that each line and sample
            has a transform location that maps the output line and sample
            to a shifted input line and sample.  These interpolations provide
            this mapping.
        </description>
       <list>
          <option value="LINEAR">
            <brief>Linear Interpolation of line and samples</brief>
            <description>
                The interpolation type used to determine intermediate line and
                sample shifts for each line.  Linear interpolation is piecewise
                discontinuous.  This interpolation option requires a minimum
                2 points.
            </description>
          </option>
          <option value="POLYNOMIAL">
            <brief>Polynomial interpolation</brief>
            <description>
                Uses polynomial interpolation of each line and sample
                shift.   This option should only be used for interpolating
                small numbers of points because polynomial interpolation
                introduces large oscillations, even for well-behaved 
                datasets.  The number of terms in the interpolating
                polynomial is equal to the number of points.  This
                interpolation option requires a minimum of 3 points.
            </description>
          </option>
          <option value="CUBIC">
            <brief>Cubic Spline interpolation of each line and sample</brief>
            <description>
                Uses cubic spline with natural boundary conditions for
                interpolation of each line and sample shift.  The resulting
                curve is piecewise cubic on each interval with matching
                first and second derivatives at the supplied data points.
                The second derivative is chosen to be zero at the first
                point and last point.  This interpolation option requires a
                minimum of 3 points.
            </description>
          </option>
          <option value="AKIMA">
            <brief>Akima Spline interpolation of each line and sample</brief>
            <description>
                Uses a non-rounded Akima spline with natural boundary conditions
                for interpolation of each line and sample shift.  This spline uses
                the non-rounded corner algorithm of Wodicka.  It requires a
                minimum of 5 points.
            </description>
          </option>
        </list>
      </parameter>

      <parameter name="DIRECTION">
        <type>string</type>
        <default><item>FORWARD</item></default>
        <brief>Direction of the transform</brief>
        <description>
            This parameter provides the ability to apply the transform to
            either the FROM or MATCH images used to compute the
            control net correlation.  FORWARD is used for the FROM
            image and REVERSE is when the MATCH, or the reference,
            image is provided in the FROM parameter to slither.
        </description>
        <list>
           <option value="FORWARD">
               <brief>Apply forward transform</brief>
               <description>
                   The FORWARD transform is the typically mode of operation for
                   slither.  This option will transform the file typically associated with
                   the search chip, the FROM parameter,  used in the registration
                   application.
               </description>
           </option>
           <option value="REVERSE">
               <brief>Apply reverse transform</brief>
               <description>
                   The REVERSE transform option is used to apply the transform
                   to the image used as the pattern chip, or typically the image 
                   provided in the MATCH parameter of the coregistration
                   applications.
               </description>
           </option>
        </list>
      </parameter>

      <parameter name="LINEOFFSET">
        <type>double</type>
        <default><item>0.0</item></default>
        <brief>Number lines to add to each shift</brief>
        <description>
            <p>
            In some cases, an initial offset was added to start the image registration.
            This parameter allows for this shift to be applied to the transform.  This is
            also equivalent to the Isis <b>translate</b> transform application that
            shifts the image spatially.
            </p>
            <p>
                Negative values shifts the image down.  Positive values shifts the
                image up.
            </p>
        </description>
      </parameter>
      <parameter name="SAMPLEOFFSET">
        <type>double</type>
        <default><item>0.0</item></default>
        <brief>Number samples to add to each shift</brief>
        <description>
            <p>
            In some cases, an initial offset was added to start the image registration.
            This parameter allows for this shift to be applied to the transform.  This is
            also equivalent to the Isis <b>translate</b> transform application that
            shifts the image spatially.
            </p>
            <p>
                Note that negative values shift the image to the right.  Positive values
                shift the image left.
            </p>
        </description>
      </parameter>
    </group>

    <group name="Interpolation">
      <parameter name="INTERP">
        <type>string</type>
        <default>
          <item>CUBICCONVOLUTION</item>
        </default>
        <brief>Type of interpolation</brief>
        <description>
          This is the type of interpolation to be performed on the input.
        </description>
        <list>
          <option value="NEARESTNEIGHBOR">
            <brief>Nearest Neighbor</brief>
            <description>
              Each output pixel will be set to the pixel nearest the
              calculated input pixel.
            </description>
          </option>
          <option value="BILINEAR">
            <brief>Bi-Linear interpolation</brief>
            <description>
              Each output pixel will be set to the value calculated by
              a bi-linear interpolation of the calculated input pixel.
            </description>
          </option>
          <option value="CUBICCONVOLUTION">
            <brief>Cubic Convolution interpolation</brief>
            <description>
              Each output pixel will be set to the value calculated by
              a cubic convolution interpolation of the calculated input pixel.
            </description>
          </option>
        </list>
      </parameter>
    </group>
  </groups>
</application>

